const pug = require('pug')
const fs = require('fs').promises

let essayDescriptions = [{ "href": "/intro/getting-started", "className": "intro", "title": "Getting Started", "createDate": "2099-06-02 00:00", "lastUpdateDate": "2018-05-20T15:18:54.106Z", "summary": "[TOC] Simiki is a simple wiki framework, written in Python. Simiki is short for Simple Wiki :) For more information, simiki -h or have a look at Simiki.org The " }, { "href": "/intro/github-favored-markdown%E7%9A%84%E5%86%99%E6%B3%95", "className": "intro", "title": "Github Favored Markdown的写法", "createDate": "2018-9-27 14:08", "lastUpdateDate": "2018-09-27T11:02:18.778Z", "summary": "该文件用来测试和展示书写README的各种markdown语法。GitHub的markdown语法在标准的markdown语法基础上做了扩充，称之为GitHub Flavored Markdown。简称GFM，GFM在GitHub上有广泛应用，除了README文件外，issues和wiki均支持markdown语法。 " }, { "href": "/opencv/opencv%E6%A3%80%E6%B5%8B%E5%9B%BE%E5%83%8F%E4%B8%AD%E7%9A%84%E8%BD%AE%E5%BB%93", "className": "opencv", "title": "opencv检测图像中的轮廓", "createDate": "2018-05-21 16:46", "lastUpdateDate": "2018-05-21T11:05:07.541Z", "summary": "[TOC] 语言：python cv.findContours(src: ndarray, ) " }, { "href": "/opencv/%E5%8E%9F%E7%82%B9%E7%9F%A9%E3%80%81%E4%B8%AD%E5%BF%83%E7%9F%A9%E4%B8%8Ehu%E7%9F%A9", "className": "opencv", "title": "原点矩、中心矩与Hu矩", "createDate": "2018-05-21 19:04", "lastUpdateDate": "2018-05-24T15:00:57.292Z", "summary": "[TOC] $$ f(x, y) $$ $$ m_{pq} = \\int_{-\\infty}^{+\\infty}\\int_{-\\infty}^{+\\infty}x^py^qf(x,y)dxdy\\qquad(连续图像)$$ 或者： $$ m_{pq} = \\sum_{x=1}^{w}\\sum_{y=1}^{h}x^py^" }, { "href": "/opencv/%E5%A6%82%E4%BD%95%E6%9E%84%E9%80%A0%E7%AA%97%E5%8F%A3-%26-%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87", "className": "opencv", "title": "如何构造窗口 & 显示图片", "createDate": "2018-5-24 20:26", "lastUpdateDate": "2018-05-24T12:51:35.542Z", "summary": "[TOC] 最简单的方法，使用函数cv.imshow(title, img), 其中title为窗口标题，类型为string，img为图像数据，类型为numpy.ndarray 函数：cv.namedWindow(title, flag) title为窗口标题，类型为字符串 flag用于设置窗口参数，相应的常数值如下：" }, { "href": "/python/%E5%A6%82%E4%BD%95%E5%B0%86ipython%E7%9A%84%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E5%AF%BC%E5%87%BA%E5%88%B0.py%E6%96%87%E4%BB%B6%E4%B8%AD", "className": "python", "title": "如何将ipython的历史记录导出到.py文件中", "createDate": "2018-09-06 13:25", "lastUpdateDate": "2018-09-06T05:29:39.512Z", "summary": "原文: 如何将ipython的历史记录导出到.py文件中 " }, { "href": "/web技术/base64%E4%B8%8Ehex%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B9%8B%E9%97%B4%E7%9A%84%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2", "className": "web技术", "title": "base64与hex字符串之间的相互转换", "createDate": "2018-06-05 17:40", "lastUpdateDate": "2018-06-05T09:40:25.362Z", "summary": "" }, { "href": "/web技术/gulp%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6", "className": "web技术", "title": "gulp常用插件", "createDate": "2018-06-03 15:40", "lastUpdateDate": "2018-06-03T07:40:47.043Z", "summary": "原文: 精通gulp常用插件 [TOC] 查看更多配置：options 更多浏览器版本：browsers 替换之后的index.html中就会变成： index.html gulpfile.js 替换之后的index.html中就会变成： " }, { "href": "/web技术/mathjax%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F", "className": "web技术", "title": "MathJax的基本使用方式", "createDate": "2018-05-21 19:04", "lastUpdateDate": "2018-09-12T06:42:51.257Z", "summary": "原文：https://blog.csdn.net/u010945683/article/details/46757757 首先为了让Markdown能够解析LaTeX数学表达式，通常情况下，我们需要引入MathJax插件才可能工作。 如果是在文本中插入公式，则用$...$或者\\(...\\) 默认只有后者可用。\nNote" }, { "href": "/web技术/windows%E4%B8%8B%E4%BD%BF%E7%94%A8chrome%E8%B0%83%E8%AF%95ios%E4%B8%8B%E7%9A%84safari%E6%B5%8F%E8%A7%88%E5%99%A8", "className": "web技术", "title": "windows下使用chrome调试ios下的safari浏览器", "createDate": "2018-08-23 15:43", "lastUpdateDate": "2018-08-23T08:04:45.960Z", "summary": "原文: 移动端调试（ios手机safari+chrome调试(windows) 设置手机safari: 设置->safari->高级->打开web检查器（授权调试功能） 在windows下，首先需要安装scoop，而安装scoop需要电脑里有powershell。win10一般自带。 确认手机已连接pc，输入 在浏览器" }, { "href": "/web技术/%E4%BD%BF%E7%94%A8capture%E5%AE%9E%E7%8E%B0%E9%BB%98%E8%AE%A4%E8%B0%83%E7%94%A8%E7%9B%B8%E6%9C%BA", "className": "web技术", "title": "使用capture实现默认调用相机", "createDate": "2018-05-29 19:35", "lastUpdateDate": "2018-05-29T11:39:38.230Z", "summary": "原文:在webapp上使用input:file, 指定capture属性调用默认相机，摄像，录音功能 在iOS下开发webapp，可以再文件选择器中使用指定capture属性选择默认调用的设备 capture表示，可以捕获到系统默认的设备，比如: accept表示，直接打开系统文件目录。 其实html5的input:f" }, { "href": "/web技术/%E5%88%9B%E5%BB%BA%E8%87%AA%E7%AD%BE%E5%90%8D%E7%9A%84https%E7%AB%99%E7%82%B9", "className": "web技术", "title": "创建自签名的https站点", "createDate": "2018-05-27 23:04", "lastUpdateDate": "2018-05-28T15:11:37.195Z", "summary": "[TOC] openssl, nodejs " }, { "href": "/web技术/%E5%8E%BB%E9%99%A4html-button%E5%85%83%E7%B4%A0%E5%9C%A8%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E6%97%B6%E6%98%BE%E7%A4%BA%E7%9A%84%E8%BE%B9%E6%A1%86", "className": "web技术", "title": "去除html button元素在鼠标点击时显示的边框", "createDate": "2018-05-29 19:29", "lastUpdateDate": "2018-05-29T12:04:38.613Z", "summary": "设置css: outline:none; 示例 " }, { "href": "/web技术/%E6%93%8D%E4%BD%9Cdom%E5%85%83%E7%B4%A0%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95", "className": "web技术", "title": "操作DOM元素的常用方法", "createDate": "2018-05-29 22:42", "lastUpdateDate": "2018-05-29T15:31:54.316Z", "summary": "[TOC] 返回DOM节点 返回DOM节点 返回HTTPCollection对象(DOM节点的集合) 返回HTTPCollection对象(DOM节点的集合) 返回DOM节点 返回HTTPCollection对象(DOM节点的集合) " }, { "href": "/web技术/%E7%BA%AFcss%E5%88%9B%E5%BB%BA%E8%BE%B9%E9%95%BF%E8%87%AA%E9%80%82%E5%BA%94%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2", "className": "web技术", "title": "纯css创建边长自适应的正方形", "createDate": "2018-05-28 23:00", "lastUpdateDate": "2018-05-28T15:12:32.115Z", "summary": "[TOC] 原文：浅谈纯CSS实现自适应浏览器宽度的正方形 JavaScript实现自适应浏览器宽度，可以监听onresize事件。 CSS3中新增了一组相对于可视区域百分比的长度单位vw、vh、vmin、vmax。其中vw是相对于视口宽度百分比的单位，1vw = 视口宽度的1%，vh是相对于视口高度百分比的单位，1v" }, { "href": "/图形学/bresenham%E7%9B%B4%E7%BA%BF%E7%AE%97%E6%B3%95", "className": "图形学", "title": "Bresenham直线算法", "createDate": "2018-05-23 20:35", "lastUpdateDate": "2018-05-24T10:48:28.088Z", "summary": "[TOC] 假定\\(x_0, y_0, x_1, y_1\\)皆为整数，\\(x_0 < x_1\\)，\\(y_0 < y_1\\)，斜率\\(k \\in (0, 1)\\) 设直线过点\\((x_0, y_0)\\)与点\\((x_1, y_1)\\)，其方程为： $$\ny - y_0 = k(x - x_0) \\quad \\left(" }, { "href": "/图形学/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2%E7%9A%84%E5%85%AC%E5%BC%8F", "className": "图形学", "title": "仿射变换的公式", "createDate": "2018-5-25 23:14", "lastUpdateDate": "2018-05-25T16:07:44.596Z", "summary": "[TOC] 设坐标系为x向右，y向上 空间中有点\\((x, y)\\),与原点距离为\\(L\\)，与原点连线与\\(x\\)轴夹角为\\(\\alpha\\)度 向右平移a个单位长度，向上平移b个单位长度 $$\n\\begin{bmatrix}\n1 & 0 & a \\\\\n0 & 1 & b \\\\\n0 & 0 & 1 \\\\\n\\end{b" }, { "href": "/图形学/%E5%9B%BE%E5%83%8F%E5%8F%98%E6%8D%A2%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A8%A1%E5%9E%8B", "className": "图形学", "title": "图像变换的基本模型", "createDate": "2018-5-26 10.25", "lastUpdateDate": "2018-05-28T05:41:40.609Z", "summary": "[TOC] 变换模型是指根据待匹配图像与背景图像之间几何畸变的情况，所选择的能最佳拟合两幅图像之间变化的几何变换模型。可采用的变换模型有如下几种:刚性变换、仿射变换、透视变换和非线形变换等。 如果一幅图像中的两点间的距离经变换到另一幅图像中后仍然保持不变，则这种变换称为刚体变换(Rigid Transform)。 刚体" }, { "href": "/图形学/%E5%9B%BE%E5%83%8F%E7%81%B0%E5%BA%A6%E5%8C%96%EF%BC%88%E5%8E%BB%E8%89%B2%EF%BC%89%E7%AE%97%E6%B3%95", "className": "图形学", "title": "图像灰度化（去色）算法", "createDate": "2018-05-31 00:04", "lastUpdateDate": "2018-05-31T04:42:45.886Z", "summary": "[TOC] $$\ngray(x, y) = \\frac{R_{xy} + G_{xy} + B_{xy}}{3}\n$$ $$ gray(x, y) = max(R_{xy} + G_{xy} + B_{xy}) $$ $$ gray(x, y) = 0.3R_{xy} + 0.59G_{xy} + 0.11B_{xy}" }]

let classes = {}

for(let essay of essayDescriptions){
    if(classes[essay.className]) classes[essay.className]++
    else classes[essay.className] = 1
}


let out = pug.renderFile('templates/index.pug', {
    classes,
    essayDescriptions
})
fs.writeFile('./output/index.html', out)